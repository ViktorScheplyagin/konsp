mysql -u <user> -p <password> - запустить mysql

-----------------Команды-----------------------
alter - внесение изменений в БД или таблицу
backup - создание резервной копии БД
\c - Отмена ввода
create - создание БД
drop - удаление БД
delete - удаление строки из таблицы
DELETE FROM classics WHERE title='Little Dorrit' - удалить все строки из classics, где title='Little Dorrit'
describe - описание столбцов таблицы
grant - изменение привелегий пользователя
help (\h, \?) - вывести подсказки
insert - вставить данные
lock - блокировка таблицы
LOCK TABLES db_name.tab_name READ - заблокировать доступ к таблице, оставив только возможность чтения
rename - переименовать таблицу
show - список сведений об объектах
source - выполнение команд из файла
status (\s) - отображение текущего состояния
truncate - очистить таблицу
update - обновить существующую запись
UPDATE tablename SET author='Mark Twain (Samuel Langhorne Clemens)' WHERE author='Mark Twain' - обновить содержимое поля
use - использовать БД
SELECT что-нибудь FROM таблица
COUNT(*) - возвращает количество строк в таблице
SELECT DISTINCT что-нибудь FROM таблица - не выводить повторения строк
SELECT title FROM classics WHERE author LIKE 'Charles%' - выбрать заголовки из строк, где автора начинаются с Charles
						...					 '%Charles' - ...	заканчиваются
						...					 '%Charles%' - ...	содержат
Символ % будет так же соответствовать пустому месту на той позиции, которую он занимает

ORDER...BY - отсортировать содержимое столбцов в определенном порядке
SELECT title FROM classics ORDER BY author - вывести, тайтлы, соответствующие отсортированным по возрастанию авторам
					...					 DESC - ... в обратном порядке
					...				author, year - сначала сортирует по авторам, а потом, если несколько книг одного автора - в этом подмножестве сортирует уже по годам

GROUP BY - группирует поля с одинаковым содержимым вместе или сворачивает их
SELECT author FROM classics GROUP BY author - выведет авторов, поля с одним автором свернет до одной записи
SELECT author, title FROM classics GROUP BY author, title - выведет авторов и названия книг. Поля с одним автором сгруппирует вместе

SELECT columns, classics.author FROM customers, classics WHERE classics.author=customers.author - отобразить информацию тех полей из двух таблиц, для которых верно условие

unlock - снять блокировк
LIMIT mv, strs - определить количество выводимых строк и место в таблице, с которого начинать их выводить. Strings - количество выводимых строк, mv - на сколько строк сместить вывод, относительно начала результатов. Один параметр укажет только strs.

MATCH...AGAINST - конструкция, проверяющая слова из запроса на наличие (их всех или некоторых из них, в любом порядке) во всех столбцах, имеющих индекс FULLTEXT
Существуют стоповые слова, которые игнорируются при запросах их поиска.
SELECT author, title FROM classics WHERE MATCH(author, title) AGAINST('tom sayer') - вернуть столбцы author и title, на тех строках, где в author и title в любом порядке встречаются слова tom и sayer

MATCH...AGAINST...IN BOOLEAN MODE - если в булевом режиме поставить перед искомым словом знак +, то это значит что оно обязательно должно присутствовать в результате, знак - означает что слово строго не должно быть в результате. Иначе строку не возвращать
Двойные кавычки внутри одинарных, в запросе, означают искомую фразу. Отменяют исключение стоповых слов

query WHERE condition - применить запрос только к тем данным, в отношении которых условие верно

SELECT * FROM customers NAtURAL JOIN classics - автоматически объединяются стоки с одинаковыми значениями в столбцах с одинаковыми именами

select * from classics natural join customers 

SELECT name, title FROM customers JOIN classics ON customers.isbn=classics.isbn - объединить таблицы, на основе указанных значений

original_name AS alias - создать псевдоним

AND, OR, NOT - логические операторы. Часто применяются совместно с WHERE


------------------Примеры------------------------
GRANT ALL ON test.* TO 'jim'@'<host>' IDENTIFIED BY 'mypass' - дать все права доступа всем объектам в БД test, пользователю jim на хосте <host>. jim сможет войти в свою учетную запись под паролем mypass.

CREATE TABLE classics(
	author VARCHAR(128),
	title VARCHAR(128),
	type VARCHAR(16),
	year CHAR(4)
)) ENGINE MyISAM; - создать таблицу classics с перечисленными колонками. 

show databases
show tables
describe <tablename> - показать описание колонок таблицы
SELECT * FROM tablename - вывести таблицу

INSERT INTO classics(author, title, type, year) VALUES('Mark Twain', 'The Adventures of Tom Sayer', 'Ficton', '1876') - вставить в таблице classics, в определенные колонки соответствующие значения

ALTER TABLE classics MODIFY year SMALLINT - изменить тип данный в столбце year, таблицы classics на smallint
ALTER TABLE classics CHANGE type category VARCHAR(16) - переименовать столбец type в category
ALTER TABLE classics RENAME pre1900 - переименовать таблицу classics в pre100

ALTER TABLE tabname ENGINE = MyISAM - приветси таблицу к типу myisam

...Индекс...
Индекс - это часть значения поля, по которому осуществляется поиск
ALTER TABLE classics ADD INDEX(author(20)) - добавить индекс к колонке author, величиной в 20 символов
CREATE INDEX author ON classics(author(20)) - равнозначно ваианту через ALTER, но в данном не может использоваться для создания индекса первичного ключа PRIMARY KEY

CREATE TABLE classics (
	author VARCHAR(128),
	title VARCHAR(128),
	category VARCHAR(16),
	year SMALLINT,
	INDEX(author(20)),
	INDEX(title(20)),
	INDEX(category(4)),
	INDEX(year)) ENGINE MyISAM; - создать таблицу сразу с индексами.


--------------------------Типы данных---------------------------
VARCHAR - поле динамической длины (в пределе значения в скобках); 
CHAR - поле статической длины (в скобках значение длины). Все значения больше размера поля, усекаются до заданной длинны.
BINARY и VARBINARY - аналогичны char и varchar, но предназначены для хранения двоичных данных
TEXT - имеет немного отличий от varchar. varchar может хранить в себе меньше текста, он быстрее обрабатывается при поиске, а так же для text нельзя задавать изходные значения
BLOB - Binary Large Object. То же что и binary, но позволяет хранить значения >65 536 байт. Не может иметь исходных значений
...Числовые типы данных...
Чтобы указать тип данных без знака, применяется спецификатор unsigned: INT UNSIGNED

Числовые типы данных имеют изначально заданный размер. Число в скобках указывает длинну отображаемых данных поля, при его извлечении
Если стоит спецификатор ZEROFILL - числа меньше длинны в скобках, будут дополняться до нее нулями.


CHAR(n) 		n<=256	 	CHAR(5)Hello = 5b
							CHAR(100)Goodbye = 100b
VARCHAR(n)		n<=65536	VARCHAR(5)Hello = 5b
							VARCHAR(100)Goodbye = 7b

BINARY(n)		n<=256		Как CHAR, но содержит двоичные данные
or BYTE(n)
VARBINARY(n)	n<=65536	Как VARCHAR но содержит двоичные данные

TINYTEXT(n)		n<=256		Считается строкой с набором символов
TEXT(n)			n<=65536
MEDIUMTEXT(n)	n<=1.67e+7
LONGTEXT(n)		n<=4.29e+9

TINYBLOB(n)		n<=256		Считается набором с двоичными данными
BLOB(n)			n<=65536	
MEDIUMBLOB(n)	n<=1.67e+7
LONGBLOB(n)		n<=4.29e+9

TINYINT			1
SMALLINT		2
MEDIUMINT		3
INT or			4
INTEGER
BIGINT			8
FLOAT			4
DOUBLE or		8
REAL

DATETIME		'000-00-00 00:00:00' //Format
DATE 			'0000-00-00'
TIMESTAMP		'0000-00-00 00:00:00'
TIME 			'00:00:00'
YEAR 			0000 (only years 0000 and 1901-2155)

DATETIME и TIMESTAMP отличаются тем, что первый тип имеет больший диапазон дат, но второй устанавливается автоматически на текущее время и дату при добавлении строки и при ее изменении

FULLTEXT - позволяет осуществлять поиск столбцов текста с типами CHAR, VARCHAR, TEXT. В таблицу без fulltext данные загружаются быстрее.




===============================Проектирование БД===============================

Строки разных таблиц могут иметь связь посредством первичных ключей

Нормализация - распределение данных по таблицам и создание первичных ключей (ПК). Она разбита на три основные схемы, называемые первой, второй и третьей нормальной формами. Если вносить изменения в БД, последовательно удовлетворяющие каждой их форм, то будет обеспечена оптимальная сбалансированность БД.

Первая нормальная форма:
1) БД не должна иметь повторяющихся столбцов, содержащих одни и те же типы данных
2) Все графы должны содержать только одно значение
3) Для уникальной идентификации строки должен быть ПК

Ключ, который используется для связи строк данной таблицы со строками другой, называется внешним

Вторая нормальная форма:
Решает
1) Таблица должна быть приведена к первой нормальной форме
2) БД не должна иметь повторяющихся строк, содержащих одни и те же типы данных

Третья нормальная фора:
Данные, которые не имеют зависимости от ПК, но имеющие зависимость от других значений в таблице, должны быть перемещены в другую таблицу, в соответствии с тем, к чему они имеют отношение.

Если ответ на следующие вопросы положительные, то стоит привести таблицу к третьей нормальной форме:
1) Существует ли вероятность того, что в таблице потребуется добавить много новых граф?
2) Может ли когда-нибудь для любого из полей таблиц потребоваться глобальное обновление?

Не стоит проводить нормализацию для часто запрашиваемых данных, иначе большое количество запросов а множеству таблиц замедлит скорость работы MySQL

----------------Отношения--------------------
между строками таблиц есть следующие типы отношений:
1) Один к одному
2) Один ко многим (или наоборот)
3) Многие ко многим

В отношении типа многие ко многим, связующим звеном служит промежуточная таблица, которая хнанит в своих строках ключи соотносящихся строк

Чтобы задействовать имеющееся в mysql средство обработки транзакций, нужно задействовать mysql-ядро InnoDB

==================================Транзакции================================

BEGIN - начать транзакцию
...перечень запросов...
COMMIT - завершить транзакцию
или
ROLLBACK - отменить перечень запросов

mysqldump - сделать резервную копию данных. Важно чтобы никто не сделал запись в БЛ во время создания копии. Для этого останавливают сервер.
Можно также заблокировать доступ к таблицам на чтение командой:
LOCK TABLES table1 READ, table2 READ...	
А затем снять блокировку командой:
UNLOCK TABLES
По умоланию вывод команды производится на стандартное устройство, но можно его перенаправить в файл, символом ">"

